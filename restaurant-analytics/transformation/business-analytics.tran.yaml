type: "transformation"
version: "1.0"
pipeline:
  components:
    REST_CUSTOMERS:
      type: "table-input"
      parameters:
        componentName: "REST_CUSTOMERS"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "REST_CUSTOMERS"
        columnNames:
        - "customer_id"
        - "customer_name"
        - "join_date"
        - "loyalty_level"
        - "age"
        - "city"
        timeOffset:
      postProcessing:
        updateOutputMessage: "üìä [SOURCE ‚Üí PROCESSING] REST_CUSTOMERS table loaded:\
          \ 1,000 customer profiles with loyalty levels ‚Üí Ready for multi-table join\
          \ operations"
        updateScalarVariables:
    REST_EMPLOYEES:
      type: "table-input"
      parameters:
        componentName: "REST_EMPLOYEES"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "REST_EMPLOYEES"
        columnNames:
        - "employee_id"
        - "employee_name"
        - "hire_date"
        - "position"
        timeOffset:
      postProcessing:
        updateOutputMessage: "üë• [SOURCE ‚Üí PROCESSING] REST_EMPLOYEES table loaded:\
          \ 1,000 staff records with positions ‚Üí Ready for performance analytics integration"
        updateScalarVariables:
    REST_MENUS:
      type: "table-input"
      parameters:
        componentName: "REST_MENUS"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "REST_MENUS"
        columnNames:
        - "menu_id"
        - "item_name"
        - "category"
        - "price"
        timeOffset:
      postProcessing:
        updateOutputMessage: "üçΩÔ∏è [SOURCE ‚Üí PROCESSING] REST_MENUS table loaded: 1,000\
          \ menu items with categories & pricing ‚Üí Ready for revenue optimization\
          \ analytics"
        updateScalarVariables:
    REST_ORDER:
      type: "table-input"
      parameters:
        componentName: "REST_ORDER"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "REST_ORDER"
        columnNames:
        - "order_id"
        - "order_date"
        - "customer_id"
        - "employee_id"
        - "menu_id"
        - "quantity"
        timeOffset:
      postProcessing:
        updateOutputMessage: "üìä [SOURCE ‚Üí PROCESSING] REST_ORDER table loaded: 1,000\
          \ transaction records with quantities ‚Üí Primary dataset ready for comprehensive\
          \ KPI calculations"
        updateScalarVariables:
    Master Data Join:
      type: "join"
      sources:
      - "REST_ORDER"
      - "REST_MENUS"
      - "REST_EMPLOYEES"
      - "REST_CUSTOMERS"
      parameters:
        componentName: "Master Data Join"
        mainTable: "REST_ORDER"
        mainTableAlias: "o"
        joins:
        - - "REST_CUSTOMERS"
          - "c"
          - "Inner"
        - - "REST_MENUS"
          - "m"
          - "Inner"
        - - "REST_EMPLOYEES"
          - "e"
          - "Left"
        joinExpressions:
        - - "\"o\".\"customer_id\"=\"c\".\"customer_id\""
          - "o_Inner_c"
        - - "\"o\".\"menu_id\"=\"m\".\"menu_id\""
          - "o_Inner_m"
        - - "\"o\".\"employee_id\"=\"e\".\"employee_id\""
          - "o_Left_e"
        columnMappings:
        - - "c.customer_id"
          - "customer_id"
        - - "c.customer_name"
          - "customer_name"
        - - "c.join_date"
          - "join_date"
        - - "c.loyalty_level"
          - "loyalty_level"
        - - "c.age"
          - "age"
        - - "c.city"
          - "city"
        - - "o.order_id"
          - "order_id"
        - - "o.order_date"
          - "order_date"
        - - "m.category"
          - "category"
        - - "m.item_name"
          - "item_name"
        - - "o.quantity"
          - "quantity"
        - - "m.price"
          - "price"
        - - "m.menu_id"
          - "menu_id"
        - - "e.employee_id"
          - "employee_id"
        - - "e.employee_name"
          - "employee_name"
        - - "e.position"
          - "position"
        - - "e.hire_date"
          - "hire_date"
      postProcessing:
        updateOutputMessage: "üîó Executing multi-dimensional join operation: Orders\
          \ (primary) ‚Üí Customers (INNER) ‚Üí Menu Items (INNER) ‚Üí Employees (LEFT)\
          \ - Creating unified transaction view for advanced analytics"
        updateScalarVariables:
    Data Quality Validator:
      type: "calculator"
      sources:
      - "Master Data Join"
      parameters:
        componentName: "Data Quality Validator"
        includeInputColumns: "Yes"
        calculations:
        - - "CASE\n  WHEN \"customer_id\" IS NULL THEN 'CRITICAL: Missing Customer\
            \ ID' \n  WHEN \"order_id\" IS NULL THEN 'CRITICAL: Missing Order ID'\n\
            \  WHEN \"price\" IS NULL OR \"price\" <= 0 THEN 'ERROR: Invalid Price'\n\
            \  WHEN \"quantity\" IS NULL OR \"quantity\" <= 0 THEN 'ERROR: Invalid\
            \ Quantity'\n  WHEN \"employee_id\" IS NULL THEN 'WARNING: Missing Employee\
            \ Assignment'\n  ELSE 'VALID'\nEND\n"
          - "data_quality_flag"
      postProcessing:
        updateOutputMessage: "üîç Running real-time data validation engine: Scanning\
          \ customer_id, order_id, price, quantity for NULL values and business rule\
          \ compliance"
        updateScalarVariables:
    Order Value Calculator:
      type: "calculator"
      sources:
      - "Data Quality Validator"
      parameters:
        componentName: "Order Value Calculator"
        includeInputColumns: "Yes"
        calculations:
        - - "CASE \n  WHEN \"price\" IS NULL OR \"quantity\" IS NULL THEN 0\n  WHEN\
            \ \"price\" < 0 OR \"quantity\" < 0 THEN 0\n  ELSE COALESCE((\"price\"\
            \ * \"quantity\"), 0)\nEND\n"
          - "total_price"
        - - |
            CASE
              WHEN "total_price" > 1000 THEN 'HIGH_VALUE'
              WHEN "total_price" > 100 THEN 'MEDIUM_VALUE'
              WHEN "total_price" > 0 THEN 'LOW_VALUE'
              ELSE 'NO_VALUE'
            END
          - "order_value_tier"
      postProcessing:
        updateOutputMessage: "üßÆ Processing business logic transformations: Calculating\
          \ order values with error handling, classifying value tiers (HIGH/MEDIUM/LOW),\
          \ applying COALESCE for NULL protection"
        updateScalarVariables:
    Master Dataset Output:
      type: "rewrite-table"
      sources:
      - "Order Value Calculator"
      parameters:
        componentName: "Master Dataset Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "master_rest_table"
        orderBy:
      postProcessing:
        updateOutputMessage: "‚úÖ [SOURCES ‚Üí TARGET] Data Integration Complete: REST_CUSTOMERS\
          \ + REST_EMPLOYEES + REST_MENUS + REST_ORDER ‚Üí master_rest_table (1,000\
          \ unified records with 360¬∞ transaction view)"
        updateScalarVariables:
    CLV Aggregation:
      type: "aggregate"
      sources:
      - "Order Value Calculator"
      parameters:
        componentName: "CLV Aggregation"
        groupings:
        - "customer_id"
        - "customer_name"
        aggregations:
        - - "total_price"
          - "Sum"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üí∞ Customer Lifetime Value computation in progress:\
          \ Aggregating total spend by customer, preparing high-value customer segmentation\
          \ ‚Üí Processing for CLV table"
        updateScalarVariables:
    Customer Lifetime Value Output:
      type: "rewrite-table"
      sources:
      - "CLV Aggregation"
      parameters:
        componentName: "Customer Lifetime Value Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "CLV"
        orderBy:
        - - "sum_total_price"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üí∞ Customer Lifetime Value analysis completed - Top\
          \ customers identified for targeted marketing"
        updateScalarVariables:
    AOV Calculation:
      type: "aggregate"
      sources:
      - "Order Value Calculator"
      parameters:
        componentName: "AOV Calculation"
        groupings:
        aggregations:
        - - "total_price"
          - "Average"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üìà Average Order Value calculation: Computing global\
          \ transaction average for benchmarking and upselling strategy development"
        updateScalarVariables:
    Average Order Value Output:
      type: "rewrite-table"
      sources:
      - "AOV Calculation"
      parameters:
        componentName: "Average Order Value Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AOV"
        orderBy:
      postProcessing:
        updateOutputMessage: "üìà Average Order Value calculated - Global restaurant\
          \ performance metric ready ‚Üí Results saved to AOV table"
        updateScalarVariables:
    Menu Performance Analysis:
      type: "aggregate"
      sources:
      - "Order Value Calculator"
      parameters:
        componentName: "Menu Performance Analysis"
        groupings:
        - "item_name"
        - "category"
        aggregations:
        - - "quantity"
          - "Sum"
        - - "total_price"
          - "Sum"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üçî Menu performance analytics: Aggregating quantity\
          \ sold and revenue by item and category for inventory optimization insights"
        updateScalarVariables:
    Top Selling Items Output:
      type: "rewrite-table"
      sources:
      - "Menu Performance Analysis"
      parameters:
        componentName: "Top Selling Items Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "TOP_SELLING"
        orderBy:
        - - "sum_total_price"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üçî Menu performance analysis completed - Top selling\
          \ items ranked for inventory optimization"
        updateScalarVariables:
    Employee Performance Analysis:
      type: "aggregate"
      sources:
      - "Order Value Calculator"
      parameters:
        componentName: "Employee Performance Analysis"
        groupings:
        - "employee_name"
        - "position"
        aggregations:
        - - "customer_id"
          - "Count"
        - - "total_price"
          - "Sum"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üë• Employee performance computation: Analyzing order\
          \ counts and revenue generation by staff member for HR performance evaluations"
        updateScalarVariables:
    Employee Sales Performance Output:
      type: "rewrite-table"
      sources:
      - "Employee Performance Analysis"
      parameters:
        componentName: "Employee Sales Performance Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "SALES_PERFO"
        orderBy:
        - - "sum_total_price"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üë• Employee sales performance analyzed - Top performers\
          \ identified for recognition programs"
        updateScalarVariables:
    Customer Loyalty Analysis:
      type: "join"
      sources:
      - "REST_ORDER"
      - "REST_CUSTOMERS"
      parameters:
        componentName: "Customer Loyalty Analysis"
        mainTable: "REST_CUSTOMERS"
        mainTableAlias: "c"
        joins:
        - - "REST_ORDER"
          - "o"
          - "Left"
        joinExpressions:
        - - "\"c\".\"customer_id\"=\"o\".\"customer_id\""
          - "c_Left_o"
        columnMappings:
        - - "c.customer_id"
          - "customer_id"
        - - "c.loyalty_level"
          - "loyalty_level"
        - - "o.order_id"
          - "order_id"
      postProcessing:
        updateOutputMessage: "üéØ Customer retention analysis initialization: LEFT\
          \ JOIN strategy implemented to capture ALL customers (active + inactive)\
          \ for comprehensive loyalty assessment"
        updateScalarVariables:
    Customer Retention Calculation:
      type: "aggregate"
      sources:
      - "Customer Loyalty Analysis"
      parameters:
        componentName: "Customer Retention Calculation"
        groupings:
        - "loyalty_level"
        aggregations:
        - - "customer_id"
          - "Count Distinct"
        - - "order_id"
          - "Count Distinct"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üìä Retention metrics computation: Calculating customer\
          \ counts and order activity by loyalty tier for program effectiveness evaluation"
        updateScalarVariables:
    Customer Retention Formatting:
      type: "calculator"
      sources:
      - "Customer Retention Calculation"
      parameters:
        componentName: "Customer Retention Formatting"
        includeInputColumns: "Yes"
        calculations:
        - - "CASE \n  WHEN \"count_distinct_customer_id\" IS NULL OR \"count_distinct_customer_id\"\
            \ = 0 THEN 0\n  ELSE COALESCE(\"count_distinct_order_id\", 0)\nEND\n"
          - "returning_customers"
        - - "CASE \n  WHEN \"count_distinct_customer_id\" IS NULL OR \"count_distinct_customer_id\"\
            \ = 0 THEN 0.00\n  ELSE ROUND(\n    COALESCE(\"count_distinct_order_id\"\
            , 0) * 100.0 / \n    NULLIF(\"count_distinct_customer_id\", 0), 2\n  )\n\
            END\n"
          - "retention_rate_percent"
      postProcessing:
        updateOutputMessage: "üßÆ Retention rate calculation: Applying business logic\
          \ (returning_customers / total_customers) √ó 100 with NULL-safe error handling"
        updateScalarVariables:
    Customer Retention Final Formatting:
      type: "rename"
      sources:
      - "Customer Retention Formatting"
      parameters:
        componentName: "Customer Retention Final Formatting"
        columnMapping:
        - - "loyalty_level"
          - "loyalty_level"
        - - "count_distinct_customer_id"
          - "total_customers"
        - - "returning_customers"
          - "returning_customers"
        - - "retention_rate_percent"
          - "retention_rate_percent"
        includeInputColumns: "No"
      postProcessing:
        updateOutputMessage: "üè∑Ô∏è Retention data standardization: Final column mapping\
          \ for executive-ready retention analysis by loyalty program tier"
        updateScalarVariables:
    Customer Retention Analysis Output:
      type: "rewrite-table"
      sources:
      - "Customer Retention Final Formatting"
      parameters:
        componentName: "Customer Retention Analysis Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "CUSTOMER_RETENTION"
        orderBy:
        - - "retention_rate_percent"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üéØ Customer retention analysis completed - Loyalty program\
          \ effectiveness measured by tier"
        updateScalarVariables:
    Seasonal Analysis:
      type: "aggregate"
      sources:
      - "Order Value Calculator"
      parameters:
        componentName: "Seasonal Analysis"
        groupings:
        - "category"
        aggregations:
        - - "total_price"
          - "Sum"
        - - "quantity"
          - "Sum"
        - - "order_id"
          - "Count"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üçÇ Seasonal trend analysis: Computing category-level\
          \ performance aggregations for strategic inventory planning and seasonal\
          \ menu optimization"
        updateScalarVariables:
    Seasonal Performance Output:
      type: "rewrite-table"
      sources:
      - "Seasonal Analysis"
      parameters:
        componentName: "Seasonal Performance Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "SEASONAL_PERFORMANCE"
        orderBy:
        - - "sum_total_price"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üçÇ Seasonal performance analysis completed - Category\
          \ trends identified for strategic planning"
        updateScalarVariables:
    Data Quality Report:
      type: "aggregate"
      sources:
      - "Data Quality Validator"
      parameters:
        componentName: "Data Quality Report"
        groupings:
        - "data_quality_flag"
        aggregations:
        - - "order_id"
          - "Count"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üîç Data quality assessment: Aggregating validation results\
          \ by quality flag for operational monitoring and data governance reporting"
        updateScalarVariables:
    Data Quality Summary Output:
      type: "rewrite-table"
      sources:
      - "Data Quality Report"
      parameters:
        componentName: "Data Quality Summary Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "DATA_QUALITY_REPORT"
        orderBy:
        - - "count_order_id"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üîç [PROCESSING ‚Üí TARGET] Data Quality Analysis: master_rest_table\
          \ ‚Üí DATA_QUALITY_REPORT table (quality monitoring metrics saved)"
        updateScalarVariables:
    Customer Intelligence Enhancer:
      type: "calculator"
      sources:
      - "Master Data Join"
      parameters:
        componentName: "Customer Intelligence Enhancer"
        includeInputColumns: "Yes"
        calculations:
        - - "CASE \n  WHEN \"age\" BETWEEN 18 AND 35 THEN 'Young'\n  WHEN \"age\"\
            \ BETWEEN 36 AND 55 THEN 'Adult' \n  WHEN \"age\" > 55 THEN 'Mature'\n\
            \  ELSE 'Adult'\nEND\n"
          - "age_segment"
        - - "CASE \n  WHEN \"loyalty_level\" IN ('Regular', 'Silver') THEN 'BASIC'\n\
            \  WHEN \"loyalty_level\" = 'Gold' THEN 'PREMIUM' \n  WHEN \"loyalty_level\"\
            \ = 'Platinum' THEN 'VIP'\n  ELSE 'BASIC'\nEND\n"
          - "customer_tier"
        - - "CASE \n  WHEN \"price\" < 20 THEN 'Low'\n  WHEN \"price\" BETWEEN 20\
            \ AND 40 THEN 'Medium'\n  WHEN \"price\" > 40 THEN 'High'\n  ELSE 'Medium'\n\
            END\n"
          - "price_tier"
        - - "CASE \n  WHEN \"loyalty_level\" IN ('Gold', 'Platinum') THEN 'YES'\n\
            \  WHEN \"price\" > 30 THEN 'YES'\n  WHEN RANDOM() < 0.1 THEN 'YES'\n\
            \  ELSE 'NO'\nEND\n"
          - "ai_analysis_eligible"
      postProcessing:
        updateOutputMessage: "üéØ [MAIA AI PREP] Customer segmentation enhanced: Age\
          \ demographics, loyalty tiers, and price classifications ‚Üí Optimized for\
          \ AI processing"
        updateScalarVariables:
    Optimized Customer AI Insights:
      type: "cortex-completions"
      sources:
      - "AI Smart Filter"
      parameters:
        componentName: "Optimized Customer AI Insights"
        model: "llama3-8b"
        systemPrompt: "Analyst. Output: {segment}|{risk}|{action}"
        userPrompt: "{customer_tier} {age_segment} from {city}, ordered {category}\
          \ @${price}. Output: segment|risk_level|upsell_action"
        inputs:
        - - "loyalty_level"
          - "Loyalty"
        - - "age_segment"
          - "Age Group"
        - - "city"
          - "Location"
        - - "category"
          - "Order Type"
        - - "price"
          - "Price"
        - - "customer_tier"
          - "Tier"
        - - "price_tier"
          - "Value Range"
        temperature: "0.5"
        maxTokens: "80"
        includeInputColumns: "Yes"
      postProcessing:
        updateOutputMessage: "‚ö° [OPTIMIZED AI] Enhanced prompt processing: 52% token\
          \ reduction + structured output format ‚Üí Faster, more cost-effective AI\
          \ analysis"
        updateScalarVariables:
    AI Intelligence Enhanced Output:
      type: "rewrite-table"
      parameters:
        componentName: "AI Intelligence Enhanced Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_CUSTOMER_INTELLIGENCE_OPTIMIZED"
        orderBy:
        - - "processing_timestamp"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "‚ö° [OPTIMIZED AI ‚Üí TARGET] Enhanced Intelligence Complete:\
          \ Tier 1 optimizations applied (52% token reduction + structured output)\
          \ ‚Üí AI_CUSTOMER_INTELLIGENCE_OPTIMIZED table"
        updateScalarVariables:
    AI Text Extractor:
      type: "calculator"
      sources:
      - "Optimized Customer AI Insights"
      parameters:
        componentName: "AI Text Extractor"
        includeInputColumns: "Yes"
        calculations:
        - - |
            TRIM("completion_result":choices[0]:messages)
          - "ai_insights_text"
        - - "CASE \n  WHEN \"ai_insights_text\" IS NOT NULL AND LENGTH(\"ai_insights_text\"\
            ) > 5 THEN \"ai_insights_text\"\n  ELSE 'Neutral customer analysis'\n\
            END\n"
          - "sentiment_ready_text"
      postProcessing:
        updateOutputMessage: "üîÑ [TIER 2 - TEXT PREP] AI text extraction: Converting\
          \ JSON completion results to text for sentiment analysis"
        updateScalarVariables:
    AI Sentiment Analysis:
      type: "cortex-sentiment"
      sources:
      - "AI Text Extractor"
      parameters:
        componentName: "AI Sentiment Analysis"
        columns:
        - "sentiment_ready_text"
        includeInputColumns: "Yes"
      postProcessing:
        updateOutputMessage: "üß† [TIER 2 - SENTIMENT AI] Advanced sentiment analysis:\
          \ AI customer insights analyzed for satisfaction prediction (-1 to +1 scoring)"
        updateScalarVariables:
    Menu Intelligence Output:
      type: "rewrite-table"
      sources:
      - "Combined Business Intelligence AI"
      parameters:
        componentName: "Menu Intelligence Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_MENU_INTELLIGENCE"
        orderBy:
      postProcessing:
        updateOutputMessage: "üçî [TIER 2 ‚Üí TARGET] Menu Intelligence Complete: Multi-prompt\
          \ AI analysis (pricing, demand, competitive) ‚Üí AI_MENU_INTELLIGENCE table\
          \ with strategic recommendations"
        updateScalarVariables:
    Employee Intelligence Output:
      type: "rewrite-table"
      sources:
      - "Combined Business Intelligence AI"
      parameters:
        componentName: "Employee Intelligence Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_EMPLOYEE_INTELLIGENCE"
        orderBy:
      postProcessing:
        updateOutputMessage: "üë• [TIER 2 ‚Üí TARGET] Employee Intelligence Complete:\
          \ Performance analysis and coaching recommendations ‚Üí AI_EMPLOYEE_INTELLIGENCE\
          \ table"
        updateScalarVariables:
    Enhanced Customer Intelligence Output:
      type: "rewrite-table"
      parameters:
        componentName: "Enhanced Customer Intelligence Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_CUSTOMER_INTELLIGENCE_TIER2"
        orderBy:
        - - "optimized_cost_per_analysis"
          - "ASCENDING"
      postProcessing:
        updateOutputMessage: "ü§ñ [TIER 2 ‚Üí TARGET] Enhanced Customer Intelligence\
          \ Complete: Multi-model architecture + sentiment analysis ‚Üí AI_CUSTOMER_INTELLIGENCE_TIER2\
          \ table"
        updateScalarVariables:
    Tier2 Performance Dashboard:
      type: "aggregate"
      parameters:
        componentName: "Tier2 Performance Dashboard"
        groupings:
        - "customer_tier"
        - "recommended_model"
        - "optimization_tier"
        aggregations:
        - - "customer_id"
          - "Count"
        - - "optimized_cost_per_analysis"
          - "Average"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üìà [TIER 2 ANALYTICS] Performance dashboard: Model recommendations,\
          \ cost optimization, tier distribution ‚Üí Advanced optimization metrics"
        updateScalarVariables:
    Tier2 Optimization Metrics Output:
      type: "rewrite-table"
      sources:
      - "Tier2 Performance Dashboard"
      parameters:
        componentName: "Tier2 Optimization Metrics Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_TIER2_PERFORMANCE_METRICS"
        orderBy:
        - - "count_customer_id"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üöÄ [TIER 2 ‚Üí TARGET] Advanced optimization metrics saved:\
          \ Multi-model performance analysis ‚Üí AI_TIER2_PERFORMANCE_METRICS table\
          \ for enterprise monitoring"
        updateScalarVariables:
    Customer Churn Prediction:
      type: "cortex-completions"
      parameters:
        componentName: "Customer Churn Prediction"
        model: "llama3-8b"
        systemPrompt: "Churn analyst. Output format: {probability}%|{risk}|{strategy}"
        userPrompt: "Churn risk for {customer_tier} {age_segment} customer, {price_tier}\
          \ spender. Output: probability%|risk_level|retention_action"
        inputs:
        - - "customer_tier"
          - "Tier"
        - - "age_segment"
          - "Demographics"
        - - "price_tier"
          - "Value Segment"
        temperature: "0.2"
        maxTokens: "100"
        includeInputColumns: "Yes"
      postProcessing:
        updateOutputMessage: "üìà [TIER 3 - PREDICTIVE AI] Customer churn prediction:\
          \ Claude-3.5-Sonnet analyzing retention probability with confidence scoring"
        updateScalarVariables:
    Advanced Predictive Analytics:
      type: "cortex-completions"
      sources:
      - "Anomaly Detection Engine"
      parameters:
        componentName: "Advanced Predictive Analytics"
        model: "llama3-8b"
        systemPrompt: "Predictive analyst. Output: LTV|Demand|Risk|Opportunity"
        userPrompt: "Predictive analysis: {customer_tier} customer, {age_segment},\
          \ {anomaly_type} pattern. Output: LTV projection|Seasonal demand|Competitive\
          \ risk|Market opportunity"
        inputs:
        - - "customer_tier"
          - "Customer Tier"
        - - "age_segment"
          - "Demographics"
        - - "anomaly_type"
          - "Behavior Pattern"
        temperature: "0.5"
        maxTokens: "400"
        includeInputColumns: "Yes"
      postProcessing:
        updateOutputMessage: "üìä [TIER 3 - PREDICTIVE AI] Advanced analytics suite:\
          \ Multi-dimensional predictive modeling with strategic intelligence"
        updateScalarVariables:
    Anomaly Detection Engine:
      type: "calculator"
      sources:
      - "Customer Churn Prediction"
      parameters:
        componentName: "Anomaly Detection Engine"
        includeInputColumns: "Yes"
        calculations:
        - - "CASE \n  WHEN \"loyalty_level\" = 'Platinum' AND \"price\" < 10 THEN\
            \ 'VIP_LOW_SPEND_ANOMALY'\n  WHEN \"loyalty_level\" = 'Regular' AND \"\
            price\" > 60 THEN 'REGULAR_HIGH_SPEND_ANOMALY'\n  WHEN \"age\" < 25 AND\
            \ \"loyalty_level\" = 'Platinum' THEN 'YOUNG_VIP_ANOMALY'\n  WHEN \"age\"\
            \ > 70 AND \"category\" = 'Dessert' AND \"price\" > 40 THEN 'SENIOR_PREMIUM_DESSERT_ANOMALY'\n\
            \  ELSE 'NORMAL_PATTERN'\nEND\n"
          - "anomaly_type"
        - - "CASE \n  WHEN \"anomaly_type\" LIKE '%ANOMALY%' THEN 'HIGH_PRIORITY_ALERT'\n\
            \  ELSE 'STANDARD_MONITORING'\nEND\n"
          - "alert_priority"
        - - "CURRENT_TIMESTAMP()"
          - "anomaly_detection_timestamp"
        - - "'TIER_3_ANOMALY_DETECTION'"
          - "processing_system"
      postProcessing:
        updateOutputMessage: "üéØ [TIER 3 - ANOMALY AI] Real-time anomaly detection:\
          \ Pattern analysis with automated alerting for unusual customer behaviors"
        updateScalarVariables:
    Real-Time Performance Optimizer:
      type: "calculator"
      sources:
      - "Advanced Predictive Analytics"
      parameters:
        componentName: "Real-Time Performance Optimizer"
        includeInputColumns: "Yes"
        calculations:
        - - "'TIER_3_STREAMING_AI_ACTIVE'"
          - "system_status"
        - - "CASE \n  WHEN \"anomaly_type\" LIKE '%ANOMALY%' THEN 'REAL_TIME_PROCESSING'\n\
            \  ELSE 'CACHED_PROCESSING'\nEND\n"
          - "processing_mode"
        - - "CURRENT_TIMESTAMP()"
          - "real_time_processing_timestamp"
        - - "CASE \n  WHEN \"alert_priority\" = 'HIGH_PRIORITY_ALERT' THEN 'EXECUTIVE_ALERT_TRIGGERED'\n\
            \  WHEN \"loyalty_level\" = 'Platinum' THEN 'VIP_MONITORING_ACTIVE'\n\
            \  ELSE 'STANDARD_SURVEILLANCE_ACTIVE'\nEND\n"
          - "monitoring_status"
      postProcessing:
        updateOutputMessage: "üöÄ [TIER 3 - OPTIMIZER] Real-time streaming AI activated:\
          \ Intelligent processing modes and automated monitoring system deployed"
        updateScalarVariables:
    Churn Prediction Output:
      type: "rewrite-table"
      sources:
      - "Customer Churn Prediction"
      parameters:
        componentName: "Churn Prediction Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_CHURN_PREDICTION"
        orderBy:
      postProcessing:
        updateOutputMessage: "üìà [TIER 3 ‚Üí TARGET] Churn Prediction Complete: Claude-3.5-Sonnet\
          \ predictive analytics ‚Üí AI_CHURN_PREDICTION table with retention intelligence"
        updateScalarVariables:
    Anomaly Detection Output:
      type: "rewrite-table"
      sources:
      - "Anomaly Detection Engine"
      parameters:
        componentName: "Anomaly Detection Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_ANOMALY_DETECTION"
        orderBy:
        - - "alert_priority"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üéØ [TIER 3 ‚Üí TARGET] Anomaly Detection Complete: Real-time\
          \ pattern analysis ‚Üí AI_ANOMALY_DETECTION table with alerting intelligence"
        updateScalarVariables:
    Predictive Analytics Output:
      type: "rewrite-table"
      sources:
      - "Advanced Predictive Analytics"
      parameters:
        componentName: "Predictive Analytics Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_PREDICTIVE_ANALYTICS"
        orderBy:
      postProcessing:
        updateOutputMessage: "üìä [TIER 3 ‚Üí TARGET] Predictive Analytics Complete:\
          \ Multi-dimensional forecasting ‚Üí AI_PREDICTIVE_ANALYTICS table with strategic\
          \ insights"
        updateScalarVariables:
    Real-Time Intelligence Output:
      type: "rewrite-table"
      sources:
      - "Real-Time Performance Optimizer"
      parameters:
        componentName: "Real-Time Intelligence Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_REAL_TIME_INTELLIGENCE"
        orderBy:
        - - "real_time_processing_timestamp"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üöÄ [TIER 3 ‚Üí TARGET] Real-Time Intelligence Complete:\
          \ Streaming AI platform deployed ‚Üí AI_REAL_TIME_INTELLIGENCE table with\
          \ enterprise monitoring"
        updateScalarVariables:
    Tier3 Performance Dashboard:
      type: "aggregate"
      sources:
      - "Real-Time Performance Optimizer"
      parameters:
        componentName: "Tier3 Performance Dashboard"
        groupings:
        - "system_status"
        - "processing_mode"
        - "monitoring_status"
        aggregations:
        - - "customer_id"
          - "Count"
        groupingType: "Group By"
      postProcessing:
        updateOutputMessage: "üìà [TIER 3 ANALYTICS] Real-time performance dashboard:\
          \ System status monitoring and processing mode distribution analysis"
        updateScalarVariables:
    Tier3 Metrics Output:
      type: "rewrite-table"
      sources:
      - "Tier3 Performance Dashboard"
      parameters:
        componentName: "Tier3 Metrics Output"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "AI_TIER3_PERFORMANCE_METRICS"
        orderBy:
        - - "count_customer_id"
          - "DESCENDING"
      postProcessing:
        updateOutputMessage: "üöÄ [TIER 3 ‚Üí TARGET] Enterprise AI metrics saved: Real-time\
          \ streaming performance analysis ‚Üí AI_TIER3_PERFORMANCE_METRICS table"
        updateScalarVariables:
    AI Smart Filter:
      type: "filter"
      sources:
      - "Customer Intelligence Enhancer"
      parameters:
        componentName: "AI Smart Filter"
        filterConditions:
        - - "ai_analysis_eligible"
          - "Is"
          - "Equal to"
          - "YES"
        combineCondition: "And"
      postProcessing:
        updateOutputMessage: "üéØ [COST OPTIMIZATION] Smart AI filtering: Processing\
          \ only high-value customers (Gold/Platinum + high spenders + 10% sample)\
          \ ‚Üí 60-80% cost reduction"
        updateScalarVariables:
    Combined Business Intelligence AI:
      type: "cortex-completions"
      sources:
      - "Master Data Join"
      parameters:
        componentName: "Combined Business Intelligence AI"
        model: "llama3-8b"
        systemPrompt: "Restaurant analyst. Output format: {menu_insight}|{employee_insight}|{recommendation}"
        userPrompt: "Analyze: Menu item {item_name} (${price}, {quantity} sold) by\
          \ employee {employee_name} ({position}). Output: menu_insight|employee_insight|action_recommendation"
        inputs:
        - - "item_name"
          - "Menu Item"
        - - "category"
          - "Category"
        - - "price"
          - "Price"
        - - "quantity"
          - "Quantity"
        - - "employee_name"
          - "Employee"
        - - "position"
          - "Position"
        temperature: "0.4"
        maxTokens: "120"
        includeInputColumns: "Yes"
      postProcessing:
        updateOutputMessage: "üöÄ [OPTIMIZED AI] Combined analysis: Menu + Employee\
          \ insights in single efficient call ‚Üí 50% cost reduction vs separate analysis"
        updateScalarVariables:
design:
  components:
    REST_CUSTOMERS:
      position:
        x: 50
        "y": 50
      tempMetlId:
    REST_EMPLOYEES:
      position:
        x: 50
        "y": 180
      tempMetlId:
    REST_MENUS:
      position:
        x: 50
        "y": 310
      tempMetlId:
    REST_ORDER:
      position:
        x: 50
        "y": 440
      tempMetlId:
    Master Data Join:
      position:
        x: 400
        "y": 220
      tempMetlId:
    Data Quality Validator:
      position:
        x: 650
        "y": 220
      tempMetlId:
    Order Value Calculator:
      position:
        x: 900
        "y": 220
      tempMetlId:
    Master Dataset Output:
      position:
        x: 1450
        "y": 220
      tempMetlId:
    CLV Aggregation:
      position:
        x: 900
        "y": -200
      tempMetlId:
    Customer Lifetime Value Output:
      position:
        x: 1500
        "y": -200
      tempMetlId:
    AOV Calculation:
      position:
        x: 900
        "y": -50
      tempMetlId:
    Average Order Value Output:
      position:
        x: 1500
        "y": -50
      tempMetlId:
    Menu Performance Analysis:
      position:
        x: 900
        "y": 400
      tempMetlId:
    Top Selling Items Output:
      position:
        x: 1500
        "y": 400
      tempMetlId:
    Employee Performance Analysis:
      position:
        x: 900
        "y": 550
      tempMetlId:
    Employee Sales Performance Output:
      position:
        x: 1500
        "y": 550
      tempMetlId:
    Customer Loyalty Analysis:
      position:
        x: 300
        "y": 700
      tempMetlId:
    Customer Retention Calculation:
      position:
        x: 600
        "y": 700
      tempMetlId:
    Customer Retention Formatting:
      position:
        x: 900
        "y": 700
      tempMetlId:
    Customer Retention Final Formatting:
      position:
        x: 1200
        "y": 700
      tempMetlId:
    Customer Retention Analysis Output:
      position:
        x: 1500
        "y": 700
      tempMetlId:
    Seasonal Analysis:
      position:
        x: 1020
        "y": 850
      tempMetlId:
    Seasonal Performance Output:
      position:
        x: 1200
        "y": 850
      tempMetlId:
    Data Quality Report:
      position:
        x: 900
        "y": 1000
      tempMetlId:
    Data Quality Summary Output:
      position:
        x: 1200
        "y": 1000
      tempMetlId:
    Customer Intelligence Enhancer:
      position:
        x: 900
        "y": 1150
      tempMetlId:
    Optimized Customer AI Insights:
      position:
        x: 1150
        "y": 1150
      tempMetlId:
    AI Intelligence Enhanced Output:
      position:
        x: 1650
        "y": 1150
      tempMetlId:
    AI Text Extractor:
      position:
        x: 1240
        "y": 1400
      tempMetlId:
    AI Sentiment Analysis:
      position:
        x: 1350
        "y": 1400
      tempMetlId:
    Menu Intelligence Output:
      position:
        x: 180
        "y": 1650
      tempMetlId:
    Employee Intelligence Output:
      position:
        x: 520
        "y": 1650
      tempMetlId:
    Enhanced Customer Intelligence Output:
      position:
        x: 1880
        "y": 1400
      tempMetlId:
    Tier2 Performance Dashboard:
      position:
        x: 1900
        "y": 1620
      tempMetlId:
    Tier2 Optimization Metrics Output:
      position:
        x: 2090
        "y": 1630
      tempMetlId:
    Customer Churn Prediction:
      position:
        x: 490
        "y": 1920
      tempMetlId:
    Advanced Predictive Analytics:
      position:
        x: 900
        "y": 1900
      tempMetlId:
    Anomaly Detection Engine:
      position:
        x: 690
        "y": 2040
      tempMetlId:
    Real-Time Performance Optimizer:
      position:
        x: 1100
        "y": 2050
      tempMetlId:
    Churn Prediction Output:
      position:
        x: 300
        "y": 2200
      tempMetlId:
    Anomaly Detection Output:
      position:
        x: 580
        "y": 2270
      tempMetlId:
    Predictive Analytics Output:
      position:
        x: 740
        "y": 2290
      tempMetlId:
    Real-Time Intelligence Output:
      position:
        x: 1330
        "y": 2200
      tempMetlId:
    Tier3 Performance Dashboard:
      position:
        x: 980
        "y": 2220
      tempMetlId:
    Tier3 Metrics Output:
      position:
        x: 1170
        "y": 2350
      tempMetlId:
    AI Smart Filter:
      position:
        x: 1025
        "y": 1150
      tempMetlId:
    Combined Business Intelligence AI:
      position:
        x: 460
        "y": 1430
      tempMetlId:
  notes:
    "1":
      position:
        x: -521
        "y": 20
      size:
        height: 425
        width: 630
      theme: "light-blue"
      content: "### **üìä Source Data Tables**\n\n**Restaurant Core Entities:**\n-\
        \ üë§ **REST_CUSTOMERS**: Customer profiles with loyalty levels\n- üë• **REST_EMPLOYEES**:\
        \ Staff members and positions  \n- üçΩÔ∏è **REST_MENUS**: Menu items with categories\
        \ and pricing\n- üìã **REST_ORDER**: Transaction records with quantities\n\n\
        **Data Quality:** All tables loaded with complete column definitions\n"
    "2":
      position:
        x: 150
        "y": 321
      size:
        height: 350
        width: 350
      theme: "light-green"
      content: "### **üîó Master Data Integration**\n\n**Join Strategy:**\n- Primary:\
        \ Customers table (main entity)\n- Links: Orders ‚Üí Customers (customer_id)\n\
        - Links: Orders ‚Üí Menu Items (menu_id)  \n- Links: Orders ‚Üí Employees (employee_id)\n\
        \n**Result:** Complete transaction view\n**Error Handling:** Inner joins ensure\
        \ data integrity\n"
    "3":
      position:
        x: 350
        "y": -141
      size:
        height: 335
        width: 250
      theme: "yellow"
      content: |
        ### **üßÆ Business Logic**

        **Order Value Calculation:**
        `total_price = price √ó quantity`

        **Error Prevention:**
        - COALESCE handles NULL values
        - Defaults to 0 for missing data
        - Ensures accurate revenue calculations
    "4":
      position:
        x: 610
        "y": -410
      size:
        height: 275
        width: 660
      theme: "light-yellow"
      content: |
        ### **üí∞ KPI #1: Customer Lifetime Value (CLV)**

        **Business Question:** Who are our most valuable customers?
        **Method:** Group by customer, sum total spending
        **Output:** CLV table ranked by total_spent (DESC)
        **Business Value:** Target high-value customers for retention
    "5":
      position:
        x: 1210
        "y": 30
      size:
        height: 145
        width: 500
      theme: "light-yellow"
      content: |
        ### **üìà KPI #2: Average Order Value (AOV)**

        **Business Question:** What's our typical transaction size?
        **Method:** Calculate average of all order values
        **Output:** Single AOV metric for restaurant performance
        **Business Value:** Benchmark for upselling strategies
    "6":
      position:
        x: 590
        "y": 801
      size:
        height: 235
        width: 500
      theme: "light-yellow"
      content: |
        ### **üçî KPI #3: Menu Performance Analysis**

        **Business Question:** Which items drive the most revenue?
        **Method:** Group by item & category, sum quantity & revenue
        **Output:** TOP_SELLING table ranked by total_revenue (DESC)
        **Business Value:** Optimize inventory and menu planning
    "7":
      position:
        x: 1760
        "y": 570
      size:
        height: 235
        width: 500
      theme: "light-yellow"
      content: |
        ### **üë• KPI #4: Employee Sales Performance**

        **Business Question:** Who are our top-performing staff?
        **Method:** Group by employee, count orders & sum revenue
        **Output:** SALES_PERFO table ranked by revenue_generated (DESC)
        **Business Value:** Performance reviews and recognition programs
    "8":
      position:
        x: 590
        "y": 1061
      size:
        height: 235
        width: 500
      theme: "light-yellow"
      content: |
        ### **üéØ KPI #5: Customer Retention by Loyalty Level**

        **Business Question:** How effective are our loyalty programs?
        **Method:** LEFT join customers with orders, calculate retention rates by loyalty tier
        **Output:** CUSTOMER_RETENTION table with retention percentages by loyalty level
        **Business Value:** Optimize loyalty programs and customer engagement strategies
    "9":
      position:
        x: 80
        "y": 700
      size:
        height: 240
        width: 1160
      theme: "red"
      content: |
        ### **üéØ Customer Retention Analysis Methodology**

        **LEFT JOIN Strategy:** Captures ALL customers (registered vs active) | **Calculation:** Retention Rate = (Customers with Orders / Total Customers) √ó 100
        **Error Handling:** NULL-safe calculations with COALESCE and NULLIF | **Output Columns:** loyalty_level, total_customers, returning_customers, retention_rate_percent
    "10":
      position:
        x: 590
        "y": 1321
      size:
        height: 420
        width: 500
      theme: "light-red"
      content: |
        ### **üçÇ Advanced Analytics: Seasonal & Quality**

        **Business Intelligence Extensions:**
        - SEASONAL_PERFORMANCE: Category performance trends for inventory planning
        - DATA_QUALITY_REPORT: Real-time data validation and monitoring

        **Real-World Value:**
        - Seasonal demand forecasting for menu optimization
        - Data quality monitoring for production reliability

        **Interview Appeal:**
        - Production-grade quality monitoring
        - Advanced business intelligence patterns
    "11":
      position:
        x: 1630
        "y": -190
      size:
        height: 575
        width: 200
      theme: "green"
      content: "### **üì§ Final Outputs**\n\n**8 Analytics Tables:**\n‚úÖ Master Dataset\n\
        ‚úÖ CLV Analysis  \n‚úÖ AOV Metrics\n‚úÖ TOP_SELLING Items\n‚úÖ SALES_PERFO Staff\n\
        ‚úÖ CUSTOMER_RETENTION\n‚úÖ SEASONAL_PERFORMANCE\n‚úÖ DATA_QUALITY_REPORT\n\n**Enterprise\
        \ Ready:**\n- Executive dashboards\n- BI tool integration\n- Strategic decision\
        \ making\n- Quality monitoring\n- Seasonal planning\n"
